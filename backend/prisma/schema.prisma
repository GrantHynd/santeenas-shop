generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String            @id @default(uuid()) @db.Uuid
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  name        String
  description String
  imageUrl    String
  price       Decimal           @db.Decimal(12, 2)
  priceId     String            @unique
  stock       Int               @default(0)
  carts       ProductsInCarts[]
}

model Cart {
  id        String            @id @default(uuid()) @db.Uuid
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  sessionId String            @unique @db.Uuid
  products  ProductsInCarts[]
  order     Order?
}

model ProductsInCarts {
  product    Product  @relation(fields: [productId], references: [id])
  productId  String   @db.Uuid
  cart       Cart     @relation(fields: [cartId], references: [id])
  cartId     String   @db.Uuid
  quantity   Int      @default(0)
  assignedAt DateTime @default(now())
  assignedBy String?  @db.Uuid

  @@id([productId, cartId])
}

model Customer {
  id        String    @id @default(uuid()) @db.Uuid
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  email     String    @unique
  name      String
  phone     String?
  orders    Order[]
  addresses Address[]
}

model Address {
  id         String   @id @default(uuid()) @db.Uuid
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @db.Uuid
  name       String
  line1      String
  line2      String?
  postalCode String
  county     String?
  city       String
  country    String
}

model Order {
  id            String   @id @default(uuid()) @db.Uuid
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  stripeId      String   @unique
  customer      Customer @relation(fields: [customerId], references: [id])
  customerId    String   @db.Uuid
  cart          Cart     @relation(fields: [cartId], references: [id])
  cartId        String   @unique @db.Uuid
  price         Decimal  @db.Decimal(12, 2)
  status        String
  paymentStatus String
  fulfilled     Boolean
}
